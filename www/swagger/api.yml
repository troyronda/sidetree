openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: TrustBloc Testnet (sandbox)
    url: https://testnet.trustbloc.dev/sidetree/0.0.1
  - description: TrustBloc Local
    url: https://testnet.trustbloc.local/sidetree/0.0.1
info:
  description: This is the Open API Specification for the Sidetree Protocol on Hyperledger Fabric.
  version: "0.0.1"
  title: Sidetree REST API
tags:
  - name: Sidetree
    description: APIs for interacting with the Sidetree Node.
  - name: Blockchain
    description: APIs for interacting with the Blockchain system.
  - name: Content Addressed Storage
    description: APIs for interacting with the CAS system.
paths:
  /operations:
    post:
      tags:
        - Sidetree
      summary: Writes an Operation to Sidetree.
      operationId: writeSidetreeOperation
      parameters:
        - in: body
          schema:
            oneOf:
              - $ref: '#/components/schemas/SidetreeCreateOperation'
              - $ref: '#/components/schemas/SidetreeUpdateOperation'
              - $ref: '#/components/schemas/SidetreeRecoverOperation'
              - $ref: '#/components/schemas/SidetreeDeactivateOperation'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
  /identifiers/{did-with-or-without-initial-state}:
    get:
      tags:
        - Sidetree
      summary: Resolve a Sidetree DID.
      operationId: resolveSidetreeDID
      parameters:
        - in: path
          required: true
          name: did-with-or-without-initial-state
          schema:
            type: string
          description: A DID to resolve
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '410':
          description: DID is deactivated
        '500':
          description: Server Error
  /version:
    get:
      tags:
        - Sidetree
      operationId: getVersion
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
          
  /blockchain/time:
    get:
      tags:
        - Blockchain
      summary: Gets the latest logical blockchain time.
      operationId: getTime
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainTimeResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
  /blockchain/time/{time-hash}:
    get:
      tags:
        - Blockchain
      summary: Gets the logical blockchain time from the associated hash.
      operationId: getTimeByHash
      parameters:
        - in: path
          required: true
          name: time-hash
          schema:
            type: string
          description: The hash associated with the blockchain time
          example: "0000000000000000001bfd6c48a6c3e81902cac688e12c2d87ca3aca50e03fb5"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainTimeResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
  /blockchain/transactions:
    get:
      tags:
        - Blockchain
      summary: Fetches Sidetree transactions in chronological order.
      operationId: getTransactions
      description: "Note: The call may not return all Sidetree transactions in one batch, in which case the caller can use the transaction number of the last transaction in the returned batch to fetch subsequent transactions."
      parameters:
        - in: query
          required: false
          name: since
          schema:
            type: string
          description: A transaction number. When not given, all Sidetree transactions since inception will be returned. When given, only Sidetree transactions after the specified transaction will be returned.
          example: "170"
        - in: query
          required: false
          name: transaction-time-hash
          schema:
            type: string
          description: MUST BE given if since parameter is specified. This is the hash associated with the time the transaction specified by the since parameter is anchored on blockchain. Multiple transactions can have the same transaction time and thus the same transaction time hash. The transaction time hash helps the blockchain layer detect block reorganizations (temporary forks); HTTP 400 Bad Request with invalid_transaction_number_or_time_hash as the code parameter value in a JSON body is returned on such events.
          example: "00000000000000000000100158f474719e5a319933856f7f464fcc65a3cb2253"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainTransactions'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                example: {
                  "code": "invalid_transaction_number_or_time_hash"
                }
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
  /blockchain/transactions/first-valid:
    post:
      tags:
        - Blockchain
      summary: Get first valid Sidetree transaction
      operationId: getFirstValidTransactions
      description: Given a list of Sidetree transactions, returns the first transaction in the list that is valid. Returns 404 NOT FOUND if none of the given transactions are valid. This API is primarily used by the Sidetree core library to determine a transaction that can be used as a marker in time to reprocess transactions in the event of a block reorganization (temporary fork).
      parameters:
        - in: body
          required: false
          name: transactions
          schema:
            type: array
            example: [
              {
                "transaction_number": 19,
                "transaction_time": 545236,
                "transaction_time_hash": "0000000000000000002352597f8ec45c56ad19994808e982f5868c5ff6cfef2e",
                "anchor_string": "Qm28BKV9iiM1ZNzMsi3HbDRHDPK5U2DEhKpCYhKk83UPEg"
              },
              {
                "transaction_number": 18,
                "transaction_time": 545236,
                "transaction_time_hash": "0000000000000000000054f9719ef6ca646e2503a9c5caac1c6ea95ffb4af587",
                "anchor_string": "Qmb2wxUwvEpspKXU4QNxwYQLGS2gfsAuAE9LPcn5LprS1nb"
              },
              {
                "transaction_number": 16,
                "transaction_time": 545200,
                "transaction_time_hash": "0000000000000000000f32c84291a3305ad9e5e162d8cc363420831ecd0e2800",
                "anchor_string": "QmbBPdjWSdJoQGHbZDvPqHxWqqeKUdzBwMTMjJGeWyUkEzK"
              }
            ]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainTransaction'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
    /blockchain/version:
      get:
        tags:
          - Blockchain
        operationId: getVersion
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Version'
          '400':
            description: Bad Request
          '401':
            description: Unauthorized
          '404':
            description: Not Found
          '500':
            description: Server Error
  /blockchain/blocks/{time-hash}:
    get:
      tags:
        - Blockchain
      summary: Fetches the Fabric block for a blockchain time.
      parameters:
        - in: path
          required: true
          name: time-hash
          schema:
            type: string
          description: The hash associated with the blockchain time.
          example: "0000000000000000001bfd6c48a6c3e81902cac688e12c2d87ca3aca50e03fb5"
        - in: query
          required: false
          name: data-encoding
          schema:
            type: string
            enum: [json, base64, base64url]
          description: The encoding of the block. Defaults to json.
          example: "base64"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainBlocks'          
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
  /blockchain/blocks:
    get:
      tags:
        - Blockchain
      summary: Fetches the Fabric block for a blockchain time.
      parameters:
        - in: query
          required: true
          name: from-time
          schema:
            type: number
          description: The starting time of blocks to fetch.
          example: 0
        - in: query
          required: true
          name: max-blocks
          schema:
            type: number
          description: The number of blocks to fetch.
          example: 10
        - in: query
          required: false
          name: data-encoding
          schema:
            type: string
            enum: [json, base64, base64url]
          description: The encoding of the block. Defaults to json.
          example: "base64"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainBlocks'          
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error          
            description: Server Error
          description: Server Error          
            description: Server Error
          description: Server Error          
  /blockchain/config-block/{time-hash}:
    get:
      tags:
        - Blockchain
      summary: Fetches the Fabric config block for a blockchain time.
      parameters:
        - in: path
          required: false
          name: time-hash
          schema:
            type: string
          description: The hash associated with the blockchain time.
          example: "0000000000000000001bfd6c48a6c3e81902cac688e12c2d87ca3aca50e03fb5"
        - in: query
          required: false
          name: data-encoding
          schema:
            type: string
          description: The encoding of the block.
          example: "base64"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainBlocks'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error

  /cas/version:
      get:
        tags:
          - Content Addressed Storage
        operationId: getCASVersion
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Version'
          '400':
            description: Bad Request
          '401':
            description: Unauthorized
          '404':
            description: Not Found
          '500':
            description: Server Error
  /cas/{hash}:
    get:
      tags:
        - Content Addressed Storage
      operationId: readContent
      parameters:
        - in: path
          required: true
          name: hash
          schema:
            type: string
          example: "QmWd5PH6vyRH5kMdzZRPBnf952dbR4av3Bd7B2wBqMaAcf"
        - in: query
          required: true
          name: max-size
          schema:
            type: string
          description: If the content exceeds the specified maximum allowed size, HTTP 400 Bad Request with content_exceeds_maximum_allowed_size as the value for the code parameter in a JSON body is returned.
          example: "170"
      responses:
        '200':
          description: Success
          content:
            application/octet-stream
          
        '400':
          description: Bad Request
          oneof:
            - type: object
              properties:
                code: 
                  type: string
                  const: "content_exceeds_maximum_allowed_size"
                  description:  Content exceeds maximum allowed size
            - type: object
              properties:
                code: 
                  type: string
                  const: "content_hash_invalid"
                  description:  Content hash is invalid
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Server Error
  /cas:
    post:
      tags:
        - Content Addressed Storage
      operationId: writeContent
      parameters:
          - in: header
            name: Content-Type
            schema:
              type: string
              const: application/octet-stream
            required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CASWriteResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Server Error
          
components:
  schemas:
    Version:
      type: object
      properties:
        name: 
          type: string
          description: A string representing the name of the service.
        version: 
          type: string
          description: A string representing the version of currently running service.
      example: {
        "name": "bitcoin",
        "version": "1.0.0"
      }
    SidetreeCreateOperation:
      type: object
      properties:
        type:
          type: string
          enum: [create]
          example: "create"
        suffix_data:
          type: string
          description: The Base64URL encoded Suffix Data Object.
        delta:
          type: string
          description: The Base64URL encoded Create Operation Data Object.
      description: Create operation.
    SidetreeUpdateOperation:
      type: object
      properties:
        type:
          type: string
          enum: [update]
          example: "update"
        did_suffix:
          type: string
          description: The unique identifier string within a DID URI.
        update_reveal_value:
          type: string
          description: The last update commitment value.
        delta:
          type: string
          description: The Base64URL encoded Update Operation Data Object.
        signed_data:
          type: string
          description: The JWS object as defined in Map File for Update operations.
      description: Update operation.
    SidetreeRecoverOperation:
      type: object
      properties:
        type:
          type: string
          enum: [recover]
          description: Recover operation.
          example: "recover"
        did_suffix:
          type: string
          description: The unique identifier string within a DID URI.
        recovery_reveal_value:
          type: string
          description: The last recovery commitment value.
        delta:
          type: string
          description: The Base64URL encoded Recover Operation Data Object.
        signed_data:
          type: string
          description: The JWS object as defined in Anchor File for Recovery operations.
      description: Recover operation.
    SidetreeDeactivateOperation:
      type: object
      properties:
        type:
          type: string
          enum: [deactivate]
          example: "deactivate"
        did_suffix:
          type: string
          description: The unique identifier string within a DID URI.
        recovery_reveal_value:
          type: string
          description: The last recovery commitment value.
        signed_data:
          type: string
          description: The JWS object as defined in Anchor File for Deactivate operations.
      description: Deactivate operation.
    BlockchainTransaction:
      type: object
      properties:
        transaction_number:
          type: number
          description: A monotonically increasing number (need NOT be by 1) that identifies a Sidtree transaction.
        transaction_time:
          type: number
          description: The logical blockchain time this transaction is anchored. Used for protocol version selection.
        transaction_time_hash:
          type: string
          description: The hash associated with the transaction time.
        anchor_string:
          type: string
          description: The string written to the blockchain for this transaction.
      example: {
        "transaction_number": 89,
        "transaction_time": 545236,
        "transaction_time_hash": "0000000000000000002352597f8ec45c56ad19994808e982f5868c5ff6cfef2e",
        "anchor_string": "QmWd5PH6vyRH5kMdzZRPBnf952dbR4av3Bd7B2wBqMaAcf"
      }
    CASWriteResponse:
      type: object
      properties:
        hash:
          type: string
          description: Hash of data written to CAS
          example: "QmWd5PH6vyRH5kMdzZRPBnf952dbR4av3Bd7B2wBqMaAcf"
    BlockchainTimeResponse:
      type: object
      properties:
        time:
          type: string
          description: The logical blockchain time.
          example: "545236"
        hash:
          type: string
          description: The hash associated with the blockchain time.
          example: "0000000000000000002443210198839565f8d40a6b897beac8669cf7ba629051"
        previous_hash:
          type: string
          description: The hash associated with the previous blockchain time.
          example: "0000000000000000002443210198839565f8d40a6b897beac8669cf7ba629051"
    BlockchainTransactions:
      type: object
      properties:
        more_transactions:
          type: bool
          description: True if there are more transactions beyond the returned batch. False otherwise.
          example: "false"
        transactions:
          type: array
          description: The transactions array must always end with a complete block of data, but can start in the middle of a block if since query parameter is provided.
      example: {
        "more_transactions": false,
        "transactions": [
          {
            "transaction_number": 89,
            "transaction_time": 545236,
            "transaction_time_hash": "0000000000000000002352597f8ec45c56ad19994808e982f5868c5ff6cfef2e",
            "anchor_string": "QmWd5PH6vyRH5kMdzZRPBnf952dbR4av3Bd7B2wBqMaAcf"
          },
          {
            "transaction_number": 100,
            "transaction_time": 545236,
            "transaction_time_hash": "00000000000000000000100158f474719e5a319933856f7f464fcc65a3cb2253",
            "anchor_string": "QmbJGU4wNti6vNMGMosXaHbeMHGu9PkAUZtVBb2s2Vyq5d"
          }
        ]
      }
    BlockchainBlocks:
      type: object
      properties:
        header: 
          type: object
          description: Block header
          properties:
            number:
              type: number
              description: Block number
            data_hash:
              type: string
              description: Block hash
            previous_hash:
              type: string
              description: Previous block hash
        data:
          type: string
          description: Block data
        metadata:
          type: string
          description: Block metadata
